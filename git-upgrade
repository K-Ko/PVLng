#!/bin/sh

# set -x

echo "Fetch last version from GitHub ..."
echo
git pull

### Get last version tag
v=$(git describe --abbrev=0 --tags | sed 's/^v//')

echo
echo "Upgrade to version v$v"
echo "Upgrade PVLng database"

### Test for tag specific SQL script
sql="sql/pvlng.$v.sql"

if [ ! -f $sql ]; then
    ### Test for major release SQL ?.?.0
    v=$(echo $v | sed 's/[0-9]*$/0/')
    sql="sql/pvlng.$v.sql"
fi

if [ ! -f $sql ]; then
    echo "Not required"
else
    ### Extract MySQL credentials
    host=$(sed -n 's/.*['\''"]Host['\''"] *=> *['\''"]\(.*\)['\''"].*/\1/p' config/config.php)
    user=$(sed -n 's/.*['\''"]Username['\''"] *=> *['\''"]\(.*\)['\''"].*/\1/p' config/config.php)
    db=$(sed -n 's/.*['\''"]Database['\''"] *=> *['\''"]\(.*\)['\''"].*/\1/p' config/config.php)

    ### Find 1st password entry (from database, not admin user)
    pass=$(grep Password config/config.php | head -n1 | sed -n 's/.*=> *['\''"]\(.*\)['\''"].*/\1/p')
    [ "$pass" ] && pass="--password=$pass"

    echo -n "Apply '$sql' ... "
    mysql --host=$host --user=$user $pass $db <$sql 2>/dev/null
    echo done
fi

#echo -n "Clear temporary files from tmp/ ... "
#rm tmp/* >/dev/null 2>&1
#echo done

echo
echo "Open 'http://your.domain.here/cc' in your browser and clear the caches!"
echo
echo "Clear also your browser cache!"
