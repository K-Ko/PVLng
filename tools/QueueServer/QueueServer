#!/bin/bash
###
### Wrapper script to start/stop SMQ Server and Worker daemons
###
### @author     Knut Kohl <github@knutkohl.de>
### @copyright  2012-2015 Knut Kohl
### @license    MIT License (MIT) http://opensource.org/licenses/MIT
### @version    1.0.0
###

#set -x

pwd=$(dirname $(readlink -f $0))

conf=$pwd/QueueServer.conf

[ -f "$conf" ] || ( echo 'Missing configuration file!'; exit 127 )

### Source function library.
. /lib/lsb/init-functions

### --------------------------------------------------------------------------
function start {
    local NAME=$1
    local DESC=Queue$NAME
    local DAEMON=$pwd/run/php-$NAME
    local PIDFILE=$pwd/run/$NAME.pid
    local LOGFILE=$pwd/run/$NAME.log

    ### Make for each one its own daemon to track
    [ -L $DAEMON ] || ln -s $(which php) $DAEMON

    log_daemon_msg "Starting $DESC" "$NAME"
    /sbin/start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE \
                            --startas /bin/bash -- -c \
                            "exec $DAEMON $pwd/$NAME.php $VERBOSE -m $MEMCACHE -p $PORT -q $QUEUE >>$LOGFILE"
    log_end_msg $?
}

### --------------------------------------------------------------------------
function stop {
    local NAME=$1
    local DESC=Queue$NAME
    local PIDFILE=$pwd/run/$NAME.pid

    log_daemon_msg "Stopping $DESC" "$NAME"
    /sbin/start-stop-daemon --stop --pidfile $PIDFILE
    RETVAL=$?
    [ $RETVAL -eq 0 ] && [ -e "$PIDFILE" ] && rm -f $PIDFILE
    log_end_msg $RETVAL
}

### --------------------------------------------------------------------------

. $conf

### Defaults
[ "$PORT" ] || PORT=7777
[ "$MEMCACHE" ] || MEMCACHE=localhost:11211
[ "$QUEUE" ] || QUEUE=SMQ

RETVAL=0

### Go
case $1 in
    start)
        start Server
        start Worker
        ;;
    stop)
        stop Server
        stop Worker
        ;;
    status)
        status_of_proc -p $pwd/run/Server.pid Server QueueServer
        RETVAL=$?
        status_of_proc -p $pwd/run/Worker.pid Worker QueueWorker
        rc=$?
        [ $rc -ne 0 ] && RETVAL=$rc
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit $RETVAL
