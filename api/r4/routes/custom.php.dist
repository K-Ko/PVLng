<?php
/**
 * Add here extra needed code for your installation
 *
 * @author     Knut Kohl <github@knutkohl.de>
 * @copyright  2012-2014 Knut Kohl
 * @license    MIT License (MIT) http://opensource.org/licenses/MIT
 * @version    1.0.0
 */

/**
 * vzlogger compatible data saving
 *
 *    http://pvlng.com/Customization#vzlogger_compatibility
 *
 *    http://volkszaehler.org
 *    http://wiki.volkszaehler.org/software/controller/vzlogger
 *    http://wiki.volkszaehler.org/development/api/reference
 *
 */
// $app->post('/data/:guid', function($guid) use ($app) {
//     Channel::byGUID($guid)->write(
//         array( 'data' => $app->request->post('value') ),
//         $app->request->post('ts')
//     ) && $app->halt(201);
// })->name('post data from vzlogger')->help = array(
//     'since'       => 'r3',
//     'description' => 'Save a reading value from vzlogger (http://wiki.volkszaehler.org/software/controller/vzlogger)',
//     'payload'     => '?ts=<timestamp>&value=<value>'
// );

// if (extension_loaded ('newrelic')) {
//
//     /**
//      * Example for newrelic, set transaction name from actual route
//      *
//      * /GET/data, /PUT/data, /GET/channel etc.
//      *
//      * http://newrelic.com/monitor-everything
//      */
//     $api->hook('slim.before.dispatch', function() use ($api) {
//         if (preg_match('~^/([^/]+)/?~', $api->request->getResourceUri(), $args)) {
//             newrelic_name_transaction($api->request->getMethod() . '/' . $args[1]);
//         } else {
//             newrelic_name_transaction($api->request->getMethod());
//         }
//     });
//
//     /**
//      * You can use the API also for newrelic pinger
//      */
//     $api->get('/ping', function() use ($api) {
//         $api->contentType('text/plain');
//         $api->halt(200, 'pong');
//     })->name('ping')->help = array(
//         'since'       => 'r4',
//         'description' => 'For new relic pinger',
//     );
//
// }
